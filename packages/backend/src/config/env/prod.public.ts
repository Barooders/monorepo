import { SynchronizedProVendor } from '@config/vendor/types';
import { get } from 'env-var';
import { EnvPublicConfig, Environments } from './types';

const getUpdateProductStatusesCron = (
  vendor: SynchronizedProVendor,
  cron: string,
) => ({
  cron,
  command: `yarn console proVendor updateProductStatuses ${vendor}`,
});

const getSyncProductsCron = (vendor: SynchronizedProVendor, cron: string) => ({
  cron,
  command: `yarn console proVendor syncProducts ${vendor}`,
});

const hourlySyncs = [
  //getUpdateProductStatusesCron('montanini','40 * * * *'),
  //getUpdateProductStatusesCron('sbikes','0 * * * *'),
  //getUpdateProductStatusesCron('velosport20','20 * * * *'),
  getUpdateProductStatusesCron('agava_parts', '40 * * * *'),
  getUpdateProductStatusesCron('agava_presales', '30 * * * *'),
  getUpdateProductStatusesCron('agava', '50 * * * *'),
  getUpdateProductStatusesCron('alpin_store', '30 * * * *'),
  getUpdateProductStatusesCron('bcycles', '50 * * * *'),
  getUpdateProductStatusesCron('bernaudeau_woo', '50 * * * *'),
  getUpdateProductStatusesCron('bewak_excluded_brands', '40 * * * *'),
  getUpdateProductStatusesCron('bewak', '50 * * * *'),
  getUpdateProductStatusesCron('bicipedia', '50 * * * *'),
  getUpdateProductStatusesCron('bike_xtreme', '30 * * * *'),
  getUpdateProductStatusesCron('bikef', '10 * * * *'),
  getUpdateProductStatusesCron('ciklet', '40 * * * *'),
  getUpdateProductStatusesCron('club_in_sport', '30 * * * *'),
  getUpdateProductStatusesCron('cycling_store', '0 * * * *'),
  getUpdateProductStatusesCron('darosa_parts', '50 * * * *'),
  getUpdateProductStatusesCron('dayak', '20 * * * *'),
  getUpdateProductStatusesCron('daz_bike', '20 * * * *'),
  getUpdateProductStatusesCron('ebs', '0 * * * *'),
  getUpdateProductStatusesCron('elettronic', '20 * * * *'),
  getUpdateProductStatusesCron('ferrareis', '30 * * * *'),
  getUpdateProductStatusesCron('fiets', '0 * * * *'),
  getUpdateProductStatusesCron('funbike', '10 * * * *'),
  getUpdateProductStatusesCron('horizons_angers', '50 * * * *'),
  getUpdateProductStatusesCron('jbikes', '30 * * * *'),
  getUpdateProductStatusesCron('joost_bikes', '40 * * * *'),
  getUpdateProductStatusesCron('kite_spirit', '0 * * * *'),
  getUpdateProductStatusesCron('lario_ebike', '40 * * * *'),
  getUpdateProductStatusesCron('le_hollandais', '20 * * * *'),
  getUpdateProductStatusesCron('manufaktur', '30 * * * *'),
  getUpdateProductStatusesCron('matkite', '20 * * * *'),
  getUpdateProductStatusesCron('mbspro', '0 * * * *'),
  getUpdateProductStatusesCron('milla_bikes', '0 * * * *'),
  getUpdateProductStatusesCron('moulin_a_velos', '10 * * * *'),
  getUpdateProductStatusesCron('recocycle', '10 * * * *'),
  getUpdateProductStatusesCron('roue_liber', '0 * * * *'),
  getUpdateProductStatusesCron('semotion', '0 * * * *'),
  getUpdateProductStatusesCron('skidoc', '20 * * * *'),
  getUpdateProductStatusesCron('tch', '0 * * * *'),
  getUpdateProductStatusesCron('tribici_presta', '0 * * * *'),
  getUpdateProductStatusesCron('trocsport', '50 * * * *'),
  getUpdateProductStatusesCron('tuvalum', '20 * * * *'),
  getUpdateProductStatusesCron('velosport34', '10 * * * *'),
  getUpdateProductStatusesCron('zyclora', '0 * * * *'),
];

const dailySyncs = [
  //getSyncProductsCron('montanini', '30 1 * * *'),
  //getSyncProductsCron('sbikes', '30 5 * * *'),
  //getSyncProductsCron('techni_cycles', '30 6 * * *'),
  //getSyncProductsCron('velosport20', '0 4 * * *'),
  //getUpdateProductStatusesCron('techni_cycles', '30 8 * * *'),
  getSyncProductsCron('agava_parts', '0 21 * * *'),
  getSyncProductsCron('agava_presales', '0 0 * * *'),
  getSyncProductsCron('agava', '0 5 * * *'),
  getSyncProductsCron('all_cycles', '0 6 * * *'),
  getSyncProductsCron('alpin_store', '0 4 * * *'),
  getSyncProductsCron('baroudeur_cycles', '0 4 * * *'),
  getSyncProductsCron('bbbike', '30 3 * * *'),
  getSyncProductsCron('bcycles', '30 7 * * *'),
  getSyncProductsCron('bernaudeau_woo', '0 23 * * *'),
  getSyncProductsCron('bewak_excluded_brands', '30 2 * * *'),
  getSyncProductsCron('bewak', '0 1 * * *'),
  getSyncProductsCron('bicipedia', '0 23 * * *'),
  getSyncProductsCron('bike_xtreme', '30 2 * * *'),
  getSyncProductsCron('bikef', '0 16 * * *'),
  getSyncProductsCron('chris_bikes', '30 0 * * *'),
  getSyncProductsCron('ciklet', '0 0 * * *'),
  getSyncProductsCron('club_in_sport', '30 6 * * *'),
  getSyncProductsCron('cycling_store', '30 0 * * *'),
  getSyncProductsCron('cyclink', '30 0 * * *'),
  getSyncProductsCron('darosa_parts', '0 4 * * *'),
  getSyncProductsCron('dayak', '0 23 * * *'),
  getSyncProductsCron('daz_bike', '30 23 * * *'),
  getSyncProductsCron('ebs', '0 0 * * *'),
  getSyncProductsCron('elettronic', '0 12 * * *'),
  getSyncProductsCron('fastlap', '0 5 * * *'),
  getSyncProductsCron('ferrareis', '30 23 * * *'),
  getSyncProductsCron('fiets', '0 4 * * *'),
  getSyncProductsCron('freeglisse', '0 1 * * *'),
  getSyncProductsCron('funbike', '0 0 * * *'),
  getSyncProductsCron('horizons_angers', '0 0 * * *'),
  getSyncProductsCron('jbikes', '0 9 * * *'),
  getSyncProductsCron('joost_bikes', '0 3 * * *'),
  getSyncProductsCron('kite_spirit', '0 23 * * *'),
  getSyncProductsCron('lario_ebike', '0 4 * * *'),
  getSyncProductsCron('le_hollandais', '0 0 * * *'),
  getSyncProductsCron('loewi', '30 21 * * *'),
  getSyncProductsCron('manufaktur', '30 22 * * *'),
  getSyncProductsCron('matkite', '0 1 * * *'),
  getSyncProductsCron('mbspro', '30 2 * * *'),
  getSyncProductsCron('milla_bikes', '0 4 * * *'),
  getSyncProductsCron('mint_bikes', '30 7 * * *'),
  getSyncProductsCron('moulin_a_velos', '0 17 * * *'),
  getSyncProductsCron('nordics_value', '30 1 * * *'),
  getSyncProductsCron('pilat', '0 0 * * *'),
  getSyncProductsCron('projet_boussole', '30 11 * * *'),
  getSyncProductsCron('recocycle', '0 12 * * *'),
  getSyncProductsCron('roue_liber', '30 1 * * *'),
  getSyncProductsCron('semotion', '30 7 * * *'),
  getSyncProductsCron('skidoc', '0 6 * * *'),
  getSyncProductsCron('tnc', '0 20 * * *'),
  getSyncProductsCron('tribici_presta', '30 3 * * *'),
  getSyncProductsCron('trocsport', '0 2 * * *'),
  getSyncProductsCron('tuvalum', '0 18 * * *'),
  getSyncProductsCron('tuvalum', '0 6 * * *'),
  getSyncProductsCron('used_elite_bikes', '30 1 * * *'),
  getSyncProductsCron('velo_meldois', '0 9 * * *'),
  getSyncProductsCron('velosport34', '30 3 * * *'),
  getSyncProductsCron('willemd', '0 10 * * *'),
  getSyncProductsCron('zyclora', '0 23 * * *'),
  getUpdateProductStatusesCron('all_cycles', '0 12 * * *'),
  getUpdateProductStatusesCron('baroudeur_cycles', '30 2 * * *'),
  getUpdateProductStatusesCron('bbbike', '0 1 * * *'),
  getUpdateProductStatusesCron('chris_bikes', '30 9 * * *'),
  getUpdateProductStatusesCron('cyclink', '30 23 * * *'),
  getUpdateProductStatusesCron('everide', '0 18 * * *'),
  getUpdateProductStatusesCron('fastlap', '30 16 * * *'),
  getUpdateProductStatusesCron('freeglisse', '0 1 * * *'),
  getUpdateProductStatusesCron('le_bon_coin', '30 10 * * *'),
  getUpdateProductStatusesCron('loewi', '30 8 * * *'),
  getUpdateProductStatusesCron('mint_bikes', '0 0 * * *'),
  getUpdateProductStatusesCron('nordics_value', '30 3 * * *'),
  getUpdateProductStatusesCron('pastel', '0 2 * * *'),
  getUpdateProductStatusesCron('pilat', '30 3 * * *'),
  getUpdateProductStatusesCron('projet_boussole', '30 21 * * *'),
  getUpdateProductStatusesCron('tnc', '0 1 * * *'),
  getUpdateProductStatusesCron('used_elite_bikes', '0 4 * * *'),
  getUpdateProductStatusesCron('velo_meldois', '30 20 * * *'),
  getUpdateProductStatusesCron('willemd', '0 1 * * *'),
];

const otherTasks = [
  {
    cron: '10 * * * *',
    command: 'yarn console order checkFulfillmentStatus',
  },
  {
    cron: '0 * * * *',
    command: 'yarn console order sendUnfulfilledOrdersEmails 2',
  },
  {
    cron: '30 * * * *',
    command: 'yarn console order sendUnfulfilledOrdersEmails 5',
  },
  {
    cron: '40 * * * *',
    command: 'yarn console order sendUnfulfilledOrdersEmails 8',
  },
  {
    cron: '0 * * * *',
    command: 'yarn console order refundUnfulfilledOrders',
  },
  {
    cron: '0 16 * * *',
    command: 'yarn console searchAlerts triggerAll',
  },
  {
    cron: '0 15 * * *',
    command: 'yarn console commission cleanOldCommissions',
  },
  {
    cron: '0 8 * * *',
    command: 'yarn console product sendEmailToVendorsWithOldProducts',
  },
];

const productionPublicConfig: EnvPublicConfig = {
  envName: Environments.PRODUCTION,
  logLevel:
    get('DEBUG').default('false').asString() === 'true' ? 'trace' : 'warn',
  prettyLog: get('DEBUG').default('false').asBool(),
  hostname: 'https://backend.barooders.com',
  backendBaseUrl: 'https://backend.barooders.com',
  frontendBaseUrl: 'https://barooders.com',
  locationId: '63305416853',
  mobileAppPublicationId: 'gid://shopify/Publication/92204138723',
  technicalAccountId: '4276ff9e-a377-42bf-a344-cb991fd4b2e9',
  cronJobs: [...hourlySyncs, ...dailySyncs, ...otherTasks],
};

export default productionPublicConfig;
